AWSTemplateFormatVersion: 2010-09-09
Description: Elastest Browsers

Parameters:
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: An Amazon EC2 image ID, such as ami-0ff8a91507f77f867.

Resources:
  BrowserInstance:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: "Provisioning EC2 instance with Elastest Browser"
      AWS::CloudFormation::Init:
        config:
          files:
            "/etc/cfn/cfn-hup.conf":
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.BrowserInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource BrowserInstance --region ${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"
            "/usr/local/bin/installDocker.sh":
              content: |
                #!/bin/bash
                set -eu -o pipefail
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
                add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
                apt-get update 
                apt-get install -y docker-ce
                # downloading Elastest Browsers 
                docker pull elastestbrowsers/chrome:latest-2.0.0
                # Provisioning media files
                mkdir /opt/openvidu
                wget -q http://public.openvidu.io/fakeaudio.wav -O /opt/openvidu/fakeaudio.wav
                wget -q http://public.openvidu.io/fakevideo.y4m -O /opt/openvidu/fakevideo.y4m
                chmod -R 777 /opt/openvidu
              mode: "000755"
              owner: "root"
              group: "root"
            "/usr/local/bin/launchBrowser":
              content: |
                #!/bin/bash
                mkdir -p /home/ubuntu/recordings
                chmod 777 /home/ubuntu/recordings
                docker run --detach --name chrome -p 4444:4444 -p 6080:6080 -p 5900:5900 --cap-add=SYS_ADMIN -v /home/ubuntu/recordings:/home/ubuntu/recordings -v /opt/openvidu:/opt/openvidu elastestbrowsers/chrome:latest-2.0.0
              mode: "000755"
              owner: "root"
              group: "root"
            "/etc/rc.local":
              content: |
                #!/bin/sh -e
                /usr/local/bin/launchBrowser
                exit 0
    Properties:
      ImageId: !Ref ImageId
      InstanceType: "t3.small"
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
      UserData: 
        "Fn::Base64":
          !Sub |
          #!/bin/bash
          set -eu -o pipefail
          apt-get update
          apt-get install -y python-pip
          pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

          cfn-init --region ${AWS::Region} --stack ${AWS::StackId} --resource BrowserInstance

          /usr/local/bin/installDocker.sh || { echo "Fail deploying docker"; exit 1; }
          
          # sending the finish call
          /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource WaitCondition --region ${AWS::Region}

  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count: 1